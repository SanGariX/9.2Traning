{"mappings":"YAoJA,IAAMA,EAAOC,SAASC,cAAc,YACrBD,SAASC,cAAc,cAC/BC,iBAAiB,UAExB,SAAkBC,GACdA,EAAIC,iBACJ,IAAsBC,EAAAF,EAAIG,cAAcC,SAAjCC,EAAeH,EAAfG,MAAOC,EAAQJ,EAARI,KACdD,EAAME,MAAMC,cAAcC,OACP,SAAhBJ,EAAME,QACLF,EAAME,MAAQ,SAStB,SAAoBG,EAAMJ,GACtB,IACMK,EAAU,kCAEhB,OAAOC,MAAM,GAAiCC,OAH7B,+BAGQ,uBAAkCA,OAAbF,EAAQ,OAAkBE,OAAbH,EAAK,UAAaG,OAALP,EAAK,aAC5EQ,MAAK,SAAAC,GACF,IAAIA,EAAKC,GACL,MAAM,IAAIC,MAAMF,EAAKG,YAEzB,OAAOH,EAAKI,M,KAhBhBC,CAAWf,EAAME,MAAMD,EAAKC,OAC3BO,MAAK,SAAAO,GACFzB,EAAK0B,UAAyBD,EAAKE,SAASC,YAkBrCC,KAAI,SAAAC,G,IAAEC,EAAID,EAAJC,KAAIC,EAAAF,EAAEG,IAAKC,EAASF,EAATE,UAASC,EAAAH,EAAEI,UAAWC,EAAIF,EAAJE,KAAMC,EAAIH,EAAJG,K,MACpD,oEAEkCrB,OAAdoB,EAAK,WACJpB,OADaqB,EAAK,mCAEtBrB,OADQc,EAAK,8BAEKd,OADtBqB,EAAK,mDAC6CrB,OAAViB,EAAU,4C,IAE1CK,KAAK,G,IAxB7BC,OAAM,SAAAC,G,OAAKzC,EAAK0B,UAAYe,C","sources":["src/JS/Index.js"],"sourcesContent":["// Дока\n// https://swapi.dev/\n// https://www.weatherapi.com/\n// weatherapi\n// #region train\n// console.log(\"1\");\n\n// setTimeout(() => {\n//     console.log(\"2\");\n// }, 0)\n\n// Promise.resolve(\"3\").then(value => console.log(value))\n// Promise.reject(\"5\").then((value) => console.log(value)).catch(err => console.log(err))\n// console.log(\"4\");\n\n// const promise = new Promise((res,rej)=>{\n//     setTimeout(()=>{\n//         const val = Math.random()\n//         if(val > 0.5){\n//             res(\"YEEES\")\n//         }else{\n//             rej(\"NOOOO\")\n//         }\n\n//     }, 3000)\n// })\n// console.log(promise);\n\n// promise\n// .then((value)=>{\n//     return value + \":-)\"\n// })\n// .then(()=>{\n\n// })\n// .catch((err)=> {console.log(err);})\n// .finally()\n// const promises = fetch(\"Link\")\n// console.log(promises);\n// promises\n// .then((resp) => resp.json())\n// .then((data)=> console.log(data))\n// .catch((err)=> console.log(err))\n// #endregion train\n// ! Гра на рандом\n// #region Гра на рандом\n// const start = document.querySelector(\".js-start\");\n// const container = document.querySelector(\".js-container\");\n\n// start.addEventListener(\"click\", onStart)\n\n// function onStart() {\n//     const result = [];\n//     [...container.children].forEach((box, i)=>{\n//         if(box.textContent){\n//             console.log(\"Noo\");\n//             return\n//         }\n//         createPromise(i)\n//         .then((X)=>{\n//             box.textContent = X\n//             result.push(1)\n//         })\n//         .catch((O)=>{\n//             box.textContent = O\n//         })\n//         .finally(()=>{\n//             setTimeout(()=>{\n//                 if(i === container.children.length - 1){\n//                     if (!result.length || result.length === container.children.length) {\n//                         alert(\"Win money\")\n//                     }else{\n//                         alert(\"lost money\")\n//                     }\n//                 }\n//             }, 500)\n//         })\n//     })}\n\n// function createPromise(delay) {\n//     return new Promise((res, rej)=>{\n//     setTimeout(()=>{\n//             const random = Math.random()\n//             if(random > 0.5){\n//                 res(\"X\")\n//             }else{\n//                 rej(\"O\")\n//             }\n//         }, 1000 * delay)\n    \n//     })\n// }\n// #endregion Гра на рандом\n// ! Гра на рандом вище\n// #region Граf на рандом\n// const start = document.querySelector(\".js-start\");\n// const container = document.querySelector(\".js-container\");\n\n// start.addEventListener(\"click\", onStart)\n\n// function onStart() {\n//     let counter = 0\n\n//     const promises = [...container.children].map((_, i)=>\n//         createPromise(i)\n//     )\n\n//     Promise.allSettled(promises)\n//     .then((results)=>{\n//         results.forEach((item, i)=> {\n//         if(item.status === \"fulfilled\"){\n//             counter += 1\n//         }\n//         setTimeout(()=>{\n//             container.children[i].textContent = item.value || item.reason\n//             if(i === [...container.children].length - 1){\n//                 setTimeout(()=>{\n//                 if(counter === 0 || counter === 3){\n//                     alert(\"Winner\")\n//                 }else{\n//                     alert(\"Lost\")\n//                 }\n//                 }, 1000)\n//             }\n//         }, 1000 * i)\n//     })\n//     })\n\n\n//     // .catch((result)=>{})\n//     // .finally(()=>{})\n// }\n//                         1\n// function createPromise(delay) {\n//     return new Promise((res, rej)=>{\n//         const random = Math.random()\n//         if(random < 0.5){\n//             res(\"X\")\n//         }else{\n//             rej(\"O\")\n//         }\n//     })\n// }\n\n// #endregion Граf на рандом\n\n// next\n\nconst list = document.querySelector(\".js-list\");\nconst search = document.querySelector(\".js-search\");\nsearch.addEventListener('submit', onSearch)\n\nfunction onSearch(evt) {\n    evt.preventDefault()\n    const {query, days} = evt.currentTarget.elements\n    query.value.toLowerCase().trim()\n    if(query.value === \"kyiv\"){\n        query.value = \"Kiev\"\n    }\n    getWeather(query.value,days.value)\n    .then(data => {\n        list.innerHTML = createMurkup(data.forecast.forecastday)\n    })\n    .catch(err=>list.innerHTML = err)\n}\n\nfunction getWeather(city, days) {\n    const BASE_USL = \"http://api.weatherapi.com/v1\"\n    const API_KEY = \"0e64155eede244b99f9170552241210\"\n\n    return fetch(`${BASE_USL}/forecast.json?key=${API_KEY}&q=${city}&days=${days}&lang=uk`)\n    .then(resp=>{\n        if(!resp.ok){\n            throw new Error(resp.statusText)\n        }\n        return resp.json()\n    })\n}\nfunction createMurkup(arr) {\n    return arr.map(({date, day:{avgtemp_c, condition:{icon, text}}}) => \n        `\n            <li class=\"list__item\">\n                <img src=\"${icon}\" alt=\"${text}\">\n                <h2> Дата: ${date}</h2>\n                <p>${text}</p>\n                <p> Середня температура: ${avgtemp_c} Цельсій</з>\n            </li>\n        `).join(\"\")\n}"],"names":["$092c11f871daafad$var$list","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","query","days","value","toLowerCase","trim","city","API_KEY","fetch","concat","then","resp","ok","Error","statusText","json","$092c11f871daafad$var$getWeather","data","innerHTML","forecast","forecastday","map","param","date","_day","day","avgtemp_c","_condition","condition","icon","text","join","catch","err"],"version":3,"file":"index.40f54124.js.map"}